{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - \\u6570\\u636E/privateTest/private/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, NavLink, Route, Link } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport Register from './pages/register';\nimport Login from './pages/login';\nimport Messages from './pages/message';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport './assets/less/message.less';\nimport Nav from './component/nav'; // function clickfun(){\n// // 其中this为undefined,可以定义全局that为类的构造器this\n//   console.log(that.state.ishot)\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /* Link组件，只改变url */\n} // 简单组件\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: \"/login\",\n              search: \"?username=name\",\n              hash: \"#the-hash\",\n              state: {\n                fromDashboard: true,\n                flag: '测试测试'\n              } // 隐藏属性 可以传递隐蔽的东西\n\n            },\n            children: \"\\u6211\\u7684\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/register\",\n              activeClassName: \"selected\",\n              activeStyle: {\n                color: 'red'\n              },\n              children: \" \\u767B\\u9646\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          render: () => {\n            // return 你要显示的视图\n            return /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"\\u7476\\u7476\\u52A0\\u6CB9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this); //  return <IndexPage shop={shop} setShop={setShop}/>\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          component: Login,\n          children: \"\\u3002\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          exact: true,\n          component: Register,\n          children: \"\\uFF1F\\uFF1F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n} // 复杂组件\n\n\n_c = App;\nlet that;\n\nclass ClassCom extends React.Component {\n  //构造器调用一次\n  constructor(props) {\n    super(props); //在这个类的实例上做自己的\n\n    this.state = {\n      ishot: true\n    }; // that=this;\n    // this.changeHot=this.changeHot.bind(this);//将更改this，并给自身增加一个changeHot方法\n    // this.demo=this.changeHot.bind(this);//将更改this，\n  } //点几次调用几次\n\n\n  changeHot() {\n    //这里指的this为undefined，因为类中的方法默认开启严格模式\n    // changeHot是作为onclick的回调，所以不是通过实例调用的，是直接调用\n    // changeHot放在ClassCom的原型对象上，供实例调用\n    console.log(this.state.ishot); // this.state.ishot=!this.state.ishot;！！！状态state不可直接更改，需要使用setState\n\n    const ishot = this.state.ishot; //更新为合并不是替换\n    // this.setState({ishot:!ishot})\n  } // render调用1+n次，1是初始化，N是状态更新的次数\n\n\n  render() {\n    console.log(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        onClick: this.changeHot(),\n        children: \"\\u5B9E\\u4F8B\\u7684\\u65B9\\u6CD5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ClassCom; // export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/privateTest/private/src/App.js"],"names":["React","BrowserRouter","Router","Switch","NavLink","Route","Link","Redirect","Register","Login","Messages","Button","Nav","App","pathname","search","hash","state","fromDashboard","flag","color","that","ClassCom","Component","constructor","props","ishot","changeHot","console","log","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,NavLink,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {Redirect} from 'react-router';\nimport Register from './pages/register';\nimport Login from './pages/login'\nimport Messages from './pages/message';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport './assets/less/message.less'\n\nimport Nav from './component/nav';\n\n// function clickfun(){\n// // 其中this为undefined,可以定义全局that为类的构造器this\n//   console.log(that.state.ishot)\n// }\n\n{/* Link组件，只改变url */}\n// 简单组件\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      {/* <Button type=\"primary\">Button</Button> */}\n       <Router>\n          {/* 静态li路由导航 */}\n         <ul>\n            {/* （1）Link 静态导航标签 没有样式*/}\n            {/* <li><Link to='/login'>我的</Link></li> */}\n            {/* link隐形传递参数 */}\n            <Link\n              to={{\n                pathname: \"/login\",\n                search: \"?username=name\",\n                hash: \"#the-hash\",\n                state: { fromDashboard: true, flag:'测试测试' }  // 隐藏属性 可以传递隐蔽的东西\n              }}\n            >我的</Link>\n\n            {/* （2）NavLink 选中添加样式 */}\n            <li><NavLink to='/register' activeClassName=\"selected\" activeStyle={{color: 'red'}} > 登陆</NavLink></li>\n        </ul>\n          {/* url 中拼写地址 */}\n        {/* render传值 */}\n        <Route path=\"/login\" exact render={()=>{\n           // return 你要显示的视图\n           return <h1>瑶瑶加油</h1>\n          //  return <IndexPage shop={shop} setShop={setShop}/>\n\n        }}/>\n        \n        <Route path='/login' exact component={Login} >。。</Route>\n        <Route path='/register' exact component={Register}>？？</Route>\n       {/* 重定向： <Redirect from=\"messages/:id\" to=\"/messages/:id\" /> */}\n       \n      </Router>\n    \n      </header>\n    </div>\n  );\n}\n\n// 复杂组件\nlet that;\nclass ClassCom extends React.Component{\n  //构造器调用一次\n  constructor(props){\n    super(props);\n    //在这个类的实例上做自己的\n    this.state={ishot:true}\n    // that=this;\n    // this.changeHot=this.changeHot.bind(this);//将更改this，并给自身增加一个changeHot方法\n    // this.demo=this.changeHot.bind(this);//将更改this，\n   \n  \n  }\n  //点几次调用几次\n  changeHot(){\n    //这里指的this为undefined，因为类中的方法默认开启严格模式\n    // changeHot是作为onclick的回调，所以不是通过实例调用的，是直接调用\n    // changeHot放在ClassCom的原型对象上，供实例调用\n    console.log(this.state.ishot);\n\n      // this.state.ishot=!this.state.ishot;！！！状态state不可直接更改，需要使用setState\n      const ishot=this.state.ishot;//更新为合并不是替换\n      // this.setState({ishot:!ishot})\n  }\n  // render调用1+n次，1是初始化，N是状态更新的次数\n  render(){\n    console.log(this);\n    return (\n      <div>\n          {/* <h2>{this.state.ishot?\"good\":\"error\"}</h2> */}\n          {/* <h1 onClick={clickfun} className=\"h1Sty\"> 实例的方法，定义全局that调用</h1> */}\n          <h1 onClick={this.changeHot()}>实例的方法</h1>\n          {/* <h1 onClick={this.demo()}>实例的方法</h1> */}\n      </div>\n    )\n  }\n}\nexport default ClassCom;\n// export default App;\n\n"]},"metadata":{},"sourceType":"module"}