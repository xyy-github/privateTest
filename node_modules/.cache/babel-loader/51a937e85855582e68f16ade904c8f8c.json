{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - \\u6570\\u636E/privateTest/private/src/pages/lifeCycle.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LifeCycle extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: 'hello'\n    };\n\n    this.showData = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      title\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u5931\\u53BB\\u805A\\u7126\\u5728p\\u6807\\u7B7E\\u663E\\u793A\\u4FE1\\u606F\",\n        onBlur: this.showData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\":\", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n} // 父组件\n\n\nclass A extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fatherName: 'father'\n    };\n\n    this.transChange = () => {\n      const {\n        fatherName\n      } = this.state;\n      this.setState({\n        fatherName: 'newName'\n      });\n    };\n  }\n\n  //   组件将要挂载\n  componentWillMount() {\n    console.log('A---UNSAFE_componentWillMount');\n  } //   组件将要卸载\n\n\n  componentWillUnmount() {\n    console.log('A---componentWillUnmount ---import'); //这里可以做收尾工作。如：清空定时器、取消订阅消息等\n  } // 是否修改\n\n\n  shouldComponentUpdate() {\n    console.log('A---shouldComponentUpdate');\n    return true; //这里默认为true，如果自行修改一定要返回一个boolean值判断是否接着执行\n    //这里一般为修改里state\n  } //   挂载完成\n\n\n  componentDidMount() {\n    console.log('A---componentDidMount   ---import'); //这里做初始化工作：如：发送网络请求、做定时器、订阅消息等\n  }\n\n  render() {\n    console.log('A---render  ---import '); //触发，做一次初次渲染\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: this.transChange,\n        children: [\"\\u8FD9\\u662F\\u7236\\u4EB2\\u7684\\u503C\", this.state.fatherName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(B, {\n        fatherName: this.state.fatherName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n} // 子组件\n\n\nclass B extends React.Component {\n  shouldComponentUpdate() {\n    return true; //这里默认为true，如果自行修改一定要返回一个boolean值判断是否接着执行\n    // 组件修改\n\n    console.log('B---shouldComponentUpdate');\n  }\n\n  componentDidMount() {\n    // 挂载完成\n    console.log('B---componentDidMount  ---import');\n  }\n\n  render() {\n    console.log('B---render');\n    const {\n      fatherName\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u8FD9\\u662F\\u513F\\u5B50\\u6536\\u5230\\u7684\", fatherName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default A;","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/privateTest/private/src/pages/lifeCycle.js"],"names":["React","LifeCycle","Component","state","title","showData","event","setState","target","value","render","A","fatherName","transChange","componentWillMount","console","log","componentWillUnmount","shouldComponentUpdate","componentDidMount","B","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAQtCC,KARsC,GAQ9B;AACNC,MAAAA,KAAK,EAAE;AADD,KAR8B;;AAAA,SAWtCC,QAXsC,GAW3BC,KAAK,IAAI;AAClB,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADR,OAAd;AAGD,KAfqC;AAAA;;AAgBtCC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEN,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,qEADd;AAEE,QAAA,MAAM,EAAE,KAAKE;AAFf;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,wBAAKD,KAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA3BqC,C,CA8BxC;;;AACA,MAAMO,CAAN,SAAgBX,KAAK,CAACE,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACNS,MAAAA,UAAU,EAAE;AADN,KADsB;;AAAA,SAI9BC,WAJ8B,GAIhB,MAAM;AAClB,YAAM;AAAED,QAAAA;AAAF,UAAiB,KAAKT,KAA5B;AACA,WAAKI,QAAL,CAAc;AACZK,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,KAT6B;AAAA;;AAU9B;AACAE,EAAAA,kBAAkB,GAAI;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACD,GAb6B,CAc9B;;;AACAC,EAAAA,oBAAoB,GAAI;AACtBF,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EADsB,CAEtB;AACD,GAlB6B,CAmB9B;;;AACAE,EAAAA,qBAAqB,GAAI;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,WAAO,IAAP,CAFuB,CAEX;AACZ;AACD,GAxB6B,CAyB9B;;;AACAG,EAAAA,iBAAiB,GAAI;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EADmB,CAEnB;AACD;;AACDN,EAAAA,MAAM,GAAI;AACRK,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EADQ,CAER;;AACA,wBACE;AAAA,8BACE;AAAG,QAAA,OAAO,EAAE,KAAKH,WAAjB;AAAA,2DAAqC,KAAKV,KAAL,CAAWS,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,CAAD;AAAG,QAAA,UAAU,EAAE,KAAKT,KAAL,CAAWS;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAvC6B,C,CAyChC;;;AACA,MAAMQ,CAAN,SAAgBpB,KAAK,CAACE,SAAtB,CAAgC;AAC9BgB,EAAAA,qBAAqB,GAAI;AACvB,WAAO,IAAP,CADuB,CACX;AACZ;;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;;AACDG,EAAAA,iBAAiB,GAAI;AACnB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD;;AACDN,EAAAA,MAAM,GAAI;AACRK,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAiB,KAAKS,KAA5B;AACA,wBACE;AAAA,6BACE;AAAA,iEAAWT,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAlB6B;;AAqBhC,eAAeD,CAAf","sourcesContent":["import React from 'react'\nclass LifeCycle extends React.Component {\n  // 构造器可以不写\n  //   constructor (props) {\n  //     super(props)\n  //     this.state = {\n  //       title: 'hello'\n  //     }\n  //   }\n  state = {\n    title: 'hello'\n  }\n  showData = event => {\n    this.setState({\n      title: event.target.value\n    })\n  }\n  render () {\n    const { title } = this.state\n    return (\n      <div>\n        <input\n          placeholder='失去聚焦在p标签显示信息'\n          onBlur={this.showData}\n        ></input>\n        <p>:{title}</p>\n      </div>\n    )\n  }\n}\n\n// 父组件\nclass A extends React.Component {\n  state = {\n    fatherName: 'father'\n  }\n  transChange = () => {\n    const { fatherName } = this.state\n    this.setState({\n      fatherName: 'newName'\n    })\n  }\n  //   组件将要挂载\n  componentWillMount () {\n    console.log('A---UNSAFE_componentWillMount')\n  }\n  //   组件将要卸载\n  componentWillUnmount () {\n    console.log('A---componentWillUnmount ---import')\n    //这里可以做收尾工作。如：清空定时器、取消订阅消息等\n  }\n  // 是否修改\n  shouldComponentUpdate () {\n    console.log('A---shouldComponentUpdate')\n    return true //这里默认为true，如果自行修改一定要返回一个boolean值判断是否接着执行\n    //这里一般为修改里state\n  }\n  //   挂载完成\n  componentDidMount () {\n    console.log('A---componentDidMount   ---import')\n    //这里做初始化工作：如：发送网络请求、做定时器、订阅消息等\n  }\n  render () {\n    console.log('A---render  ---import ')\n    //触发，做一次初次渲染\n    return (\n      <div>\n        <p onClick={this.transChange}>这是父亲的值{this.state.fatherName}</p>\n        <B fatherName={this.state.fatherName} />\n      </div>\n    )\n  }\n}\n// 子组件\nclass B extends React.Component {\n  shouldComponentUpdate () {\n    return true //这里默认为true，如果自行修改一定要返回一个boolean值判断是否接着执行\n    // 组件修改\n    console.log('B---shouldComponentUpdate')\n  }\n  componentDidMount () {\n    // 挂载完成\n    console.log('B---componentDidMount  ---import')\n  }\n  render () {\n    console.log('B---render')\n    const { fatherName } = this.props\n    return (\n      <div>\n        <p>这是儿子收到的{fatherName}</p>\n      </div>\n    )\n  }\n}\n\nexport default A\n"]},"metadata":{},"sourceType":"module"}