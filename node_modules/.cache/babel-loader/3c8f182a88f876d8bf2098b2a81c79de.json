{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - \\u6570\\u636E/privateTest/private/src/pages/message.js\";\nimport { Component } from \"react\"; // import react, { Component } from 'react';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IndexPage(props) {\n  let {\n    shop,\n    setShop\n  } = props; //父组件传过来的参数\n\n  console.log(shop);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: () => {\n        setShop('星星点灯');\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), \"\\u9996\\u9875\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n} // // (1)函数式组件 (简单组件)\n// function FunCom (){\n//     // 注意这里的this是undefined,因为Babel强制\n//     return <h1>这是函数定义的组件，函数首字母必须大写，因为会去寻找，如果是大写认定为组件，如果是小写认为是html的标签没有找到就会报错</h1>\n// }\n// ReactDom.render(<FunCom/>,document.getElementById(\"??\"))\n// // (2)类式组件（复杂组件：包含状态）\n// class ClassCom extends React.Component{\n//     render(){\n//         //render放在类（ClassCom）的原型对象上,供实例使用\n//         // render的this是ClassCom的实例对象\n//         return <h1>这是类定义的组件，适合用于复杂组件的定义</h1>\n//     }\n// }\n// ReactDOM.render(<ClassCom/>,document.getElementById(\"?\"))\n\n_c = IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/privateTest/private/src/pages/message.js"],"names":["Component","IndexPage","props","shop","setShop","console","log","cursor"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B,C,CAEA;;;AACA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACpC,MAAI;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAiBF,KAArB,CADoC,CACT;;AAC3BG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,sBACI;AAAA,4BAAI;AAAG,MAAA,OAAO,EAAE,MAAI;AAACC,QAAAA,OAAO,CAAC,MAAD,CAAP;AAAgB,OAAjC;AACE,MAAA,KAAK,EAAE;AAACG,QAAAA,MAAM,EAAC;AAAR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,C,CACD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA1BwBN,S","sourcesContent":["import { Component } from \"react\";\n\n// import react, { Component } from 'react';\nexport default function IndexPage(props){\n    let {shop,setShop} = props;//父组件传过来的参数\n    console.log(shop);\n    return (\n        <h1><a onClick={()=>{setShop('星星点灯')}} \n              style={{cursor:'pointer'}}>hello\n            </a>\n           首页\n        </h1>\n    );\n}\n// // (1)函数式组件 (简单组件)\n// function FunCom (){\n//     // 注意这里的this是undefined,因为Babel强制\n//     return <h1>这是函数定义的组件，函数首字母必须大写，因为会去寻找，如果是大写认定为组件，如果是小写认为是html的标签没有找到就会报错</h1>\n// }\n// ReactDom.render(<FunCom/>,document.getElementById(\"??\"))\n\n// // (2)类式组件（复杂组件：包含状态）\n// class ClassCom extends React.Component{\n//     render(){\n//         //render放在类（ClassCom）的原型对象上,供实例使用\n//         // render的this是ClassCom的实例对象\n//         return <h1>这是类定义的组件，适合用于复杂组件的定义</h1>\n//     }\n// }\n// ReactDOM.render(<ClassCom/>,document.getElementById(\"?\"))\n"]},"metadata":{},"sourceType":"module"}