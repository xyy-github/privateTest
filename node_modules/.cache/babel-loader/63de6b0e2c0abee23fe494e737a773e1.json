{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - \\u6570\\u636E/privateTest/private/src/pages/lifeCyclePage.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LifeCycle extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: 'hello'\n    };\n\n    this.showData = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      title\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u5931\\u53BB\\u805A\\u7126\\u5728p\\u6807\\u7B7E\\u663E\\u793A\\u4FE1\\u606F\",\n        onBlur: this.showData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\": \", title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this);\n  }\n\n} //最重要的是三个：render（初始化渲染）、componentDidMount（挂载完成）、componentWillUnmount（即将卸载）\n// 父组件\n\n\nclass A extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fatherName: 'father'\n    };\n\n    this.transChange = () => {\n      const {\n        fatherName\n      } = this.state;\n      this.setState({\n        fatherName: 'newName'\n      });\n    };\n\n    this.forceChange = () => {\n      this.forceUpdate();\n    };\n  }\n\n  //   组件将要挂载\n  componentWillMount() {\n    console.log('A---UNSAFE_componentWillMount');\n  } //   组件将要卸载\n\n\n  componentWillUnmount() {\n    console.log('A---componentWillUnmount ---import'); //这里可以做收尾工作。如：清空定时器、取消订阅消息等\n  } // 是否修改\n\n\n  shouldComponentUpdate() {\n    console.log('A---shouldComponentUpdate');\n    return false; //这里默认为true，如果自行修改一定要返回一个boolean值判断是否接着执行。true：接着执行；false：不执行（此时可以考虑强制执行）\n    //这里一般为修改里state\n  } //强制更新\n\n\n  UNSAFE_componentWillUpdate() {\n    console.log('A---componentWillUpdate');\n  } //   组件更新完毕 （如果传props和state的话是最新渲染之前的即是之前的prop和state值，再传一个snapshotu快照）\n\n\n  componentDidUpdate(preProps, prestate, snapShot) {\n    console.log('A---componentDidUpdate');\n  } //   挂载完成\n\n\n  componentDidMount() {\n    console.log('A---componentDidMount   ---import'); //这里做初始化工作：如：发送网络请求、做定时器、订阅消息等\n  } // 若state的值在任何时候都取决于props，那么可以使用getDerivedStateFromProps\n\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(props, state);\n    return null;\n  }\n\n  render() {\n    console.log('A---render  ---import '); //触发，做一次初次渲染\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: this.transChange,\n        children: [\" \\u8FD9\\u662F\\u7236\\u4EB2\\u7684\\u503C \", this.state.fatherName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(B, {\n        fatherName: this.state.fatherName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.forceChange,\n        children: \" \\u4E0D\\u66F4\\u65B0\\u4EFB\\u4F55\\u72B6\\u6001\\u4E0B\\u5F3A\\u5236\\u66F4\\u65B0 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 10\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 14\n    }, this);\n  }\n\n} // 子组件\n\n\nclass B extends React.Component {\n  shouldComponentUpdate() {\n    return true; //这里默认为true，如果自行修改一定要返回一个boolean值判断是否接着执行\n    // 组件修改\n\n    console.log('B---shouldComponentUpdate');\n  }\n\n  componentDidMount() {\n    // 挂载完成\n    console.log('B---componentDidMount  ---import');\n  }\n\n  render() {\n    console.log('B---render');\n    const {\n      fatherName\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \\u8FD9\\u662F\\u513F\\u5B50\\u6536\\u5230\\u7684 \", fatherName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nexport default A;","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/privateTest/private/src/pages/lifeCyclePage.js"],"names":["React","LifeCycle","Component","state","title","showData","event","setState","target","value","render","A","fatherName","transChange","forceChange","forceUpdate","componentWillMount","console","log","componentWillUnmount","shouldComponentUpdate","UNSAFE_componentWillUpdate","componentDidUpdate","preProps","prestate","snapShot","componentDidMount","getDerivedStateFromProps","props","B"],"mappings":"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","sourcesContent":["import React from 'react'\nclass LifeCycle extends React.Component {\n  // 构造器可以不写\n  //   constructor (props) {\n  //     super(props)\n  //     this.state = {\n  //       title: 'hello'\n  //     }\n  //   }\n  state = {\n    title: 'hello'\n  }\n  showData = event => {\n    this.setState({\n      title: event.target.value\n    })\n  }\n  render() {\n    const {\n      title\n    } = this.state\n    return ( <\n      div >\n      <\n      input placeholder = '失去聚焦在p标签显示信息'\n      onBlur = {\n        this.showData\n      } >\n      < /input> <\n      p >: {\n        title\n      } < /p> <\n      /div>\n    )\n  }\n}\n//最重要的是三个：render（初始化渲染）、componentDidMount（挂载完成）、componentWillUnmount（即将卸载）\n// 父组件\nclass A extends React.Component {\n  state = {\n    fatherName: 'father'\n  }\n  transChange = () => {\n    const {\n      fatherName\n    } = this.state\n    this.setState({\n      fatherName: 'newName'\n    })\n  }\n  //不更新状态下强制修改\n  forceChange = () => {\n    this.forceUpdate();\n  }\n  //   组件将要挂载\n  componentWillMount() {\n    console.log('A---UNSAFE_componentWillMount')\n  }\n  //   组件将要卸载\n  componentWillUnmount() {\n    console.log('A---componentWillUnmount ---import')\n    //这里可以做收尾工作。如：清空定时器、取消订阅消息等\n  }\n  // 是否修改\n  shouldComponentUpdate() {\n    console.log('A---shouldComponentUpdate')\n    return false ;//这里默认为true，如果自行修改一定要返回一个boolean值判断是否接着执行。true：接着执行；false：不执行（此时可以考虑强制执行）\n    //这里一般为修改里state\n  }\n\n  //强制更新\n  UNSAFE_componentWillUpdate() {\n    console.log('A---componentWillUpdate')\n  }\n  //   组件更新完毕 （如果传props和state的话是最新渲染之前的即是之前的prop和state值，再传一个snapshotu快照）\n  componentDidUpdate(preProps, prestate, snapShot) {\n    console.log('A---componentDidUpdate')\n  }\n  //   挂载完成\n  componentDidMount() {\n    console.log('A---componentDidMount   ---import')\n    //这里做初始化工作：如：发送网络请求、做定时器、订阅消息等\n  }\n  // 若state的值在任何时候都取决于props，那么可以使用getDerivedStateFromProps\n  static getDerivedStateFromProps(props, state) {\n    console.log(props, state)\n    return null;\n  }\n  render() {\n    console.log('A---render  ---import ')\n    //触发，做一次初次渲染\n    return ( <\n      div >\n      <\n      p onClick = {\n        this.transChange\n      } > 这是父亲的值 {\n        this.state.fatherName\n      } < /p> <\n      B fatherName = {\n        this.state.fatherName\n      }\n      /> <\n      button onClick = {\n        this.forceChange\n      } > 不更新任何状态下强制更新 < /button> <\n      /div>\n    )\n  }\n}\n// 子组件\nclass B extends React.Component {\n  shouldComponentUpdate() {\n    return true //这里默认为true，如果自行修改一定要返回一个boolean值判断是否接着执行\n    // 组件修改\n    console.log('B---shouldComponentUpdate')\n  }\n  componentDidMount() {\n    // 挂载完成\n    console.log('B---componentDidMount  ---import')\n  }\n\n  render() {\n    console.log('B---render')\n    const {\n      fatherName\n    } = this.props\n    return ( <\n      div >\n      <\n      p > 这是儿子收到的 {\n        fatherName\n      } < /p> <\n      /div>\n    )\n  }\n}\n\nexport default A"]},"metadata":{},"sourceType":"module"}