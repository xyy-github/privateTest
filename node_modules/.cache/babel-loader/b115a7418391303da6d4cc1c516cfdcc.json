{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - \\u6570\\u636E/privateTest/private/src/pages/refsPage.js\";\nimport React, { Component } from 'react'; // ref 16.8 以前的书写版本不建议使用\n// class RefsPage extends Component{\n//     // 最简单的refs写法，16.8版本，不推荐使用\n//     showData =()=>{\n//         console.log(this.refs.inputInfo);\n//         const {inputInfo}=this.refs;\n//         console.log(inputInfo.value)\n//     }\n//     showData2=()=>{\n//         const {outputInfo} =this.refs;\n//         console.log(outputInfo.value)\n//     }\n//     render(){\n//         return (<div>\n//             <input ref=\"inputInfo\" type=\"text\" placeholder=\"点击按照展示输入信息\"></input>\n//             <button onClick={this.showData}>展示</button>\n//             <input ref=\"outputInfo\" onBlur={this.showData2} type=\"text\" placeholder=\"点失去焦点展示信息\"></input>\n//         </div>)\n//     }\n// }\n// ref使用\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RefsPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showData = () => {\n      console.log(this.inputInfo.value);\n    };\n\n    this.showData2 = () => {\n      const {\n        outputInfo\n      } = this;\n      console.log(outputInfo.value);\n    };\n\n    this.showData3 = currentNode => {\n      this.putInfo = currentNode;\n      console.log(currentNode);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: currentNode => {\n          console.log(currentNode); //回调函数是谁调用就是谁\n\n          this.inputInfo = currentNode;\n        },\n        type: \"text\",\n        placeholder: \"\\u70B9\\u51FB\\u6309\\u94AE\\u6253\\u5370\\u8F93\\u5165\\u7684\\u4FE1\\u606F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.showData,\n        children: \"\\u70B9\\u51FB\\u663E\\u793A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: this.showData2,\n        ref: currentNode => {\n          //内联函数更新过程中会执行两次，一次清空，一次设置新的\n          this.outputInfo = currentNode; //拿到当前的节点\n        },\n        type: \"text\",\n        placeholder: \"\\u5931\\u53BB\\u7126\\u70B9\\u6253\\u5370\\u8F93\\u5165\\u4FE1\\u606F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.showData3,\n        type: \"text\",\n        placeholder: \"\\u70B9\\u51FB\\u5C55\\u793A\\u8F93\\u5165\\u4FE1\\u606F\\uFF0C\\u533A\\u522B\\u4E8E\\u5185\\u8054\\u51FD\\u6570\\u4F1A\\u6267\\u884C\\u4E24\\u6B21\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RefsPage;","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/privateTest/private/src/pages/refsPage.js"],"names":["React","Component","RefsPage","showData","console","log","inputInfo","value","showData2","outputInfo","showData3","currentNode","putInfo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,MAAMC,QAAN,SAAuBF,KAAK,CAACC,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SACrCE,QADqC,GAC1B,MAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,SAAL,CAAeC,KAA3B;AACD,KAHoC;;AAAA,SAIrCC,SAJqC,GAIzB,MAAM;AAChB,YAAM;AAAEC,QAAAA;AAAF,UAAiB,IAAvB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,UAAU,CAACF,KAAvB;AACD,KAPoC;;AAAA,SAQrCG,SARqC,GAQxBC,WAAD,IAAiB;AAC3B,WAAKC,OAAL,GAAeD,WAAf;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYM,WAAZ;AACD,KAXoC;AAAA;;AAYrCE,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA,8BAEE;AACE,QAAA,GAAG,EAAEF,WAAW,IAAI;AAClBP,UAAAA,OAAO,CAACC,GAAR,CAAYM,WAAZ,EADkB,CACO;;AACzB,eAAKL,SAAL,GAAiBK,WAAjB;AACD,SAJH;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AAAQ,QAAA,OAAO,EAAE,KAAKR,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAYE;AACE,QAAA,MAAM,EAAE,KAAKK,SADf;AAEE,QAAA,GAAG,EAAEG,WAAW,IAAI;AAClB;AACA,eAAKF,UAAL,GAAkBE,WAAlB,CAFkB,CAEY;AAC/B,SALH;AAME,QAAA,IAAI,EAAC,MANP;AAOE,QAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,cAZF,eAuBE;AACE,QAAA,GAAG,EAAE,KAAKD,SADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AA5CoC;;AA8CvC,eAAeR,QAAf","sourcesContent":["import React, { Component } from 'react'\n\n// ref 16.8 以前的书写版本不建议使用\n\n// class RefsPage extends Component{\n//     // 最简单的refs写法，16.8版本，不推荐使用\n//     showData =()=>{\n//         console.log(this.refs.inputInfo);\n\n//         const {inputInfo}=this.refs;\n//         console.log(inputInfo.value)\n\n//     }\n//     showData2=()=>{\n//         const {outputInfo} =this.refs;\n//         console.log(outputInfo.value)\n//     }\n\n//     render(){\n//         return (<div>\n//             <input ref=\"inputInfo\" type=\"text\" placeholder=\"点击按照展示输入信息\"></input>\n//             <button onClick={this.showData}>展示</button>\n//             <input ref=\"outputInfo\" onBlur={this.showData2} type=\"text\" placeholder=\"点失去焦点展示信息\"></input>\n//         </div>)\n//     }\n// }\n\n// ref使用\nclass RefsPage extends React.Component {\n  showData = () => {\n    console.log(this.inputInfo.value)\n  }\n  showData2 = () => {\n    const { outputInfo } = this\n    console.log(outputInfo.value)\n  }\n  showData3 = (currentNode) => {\n    this.putInfo = currentNode;\n    console.log(currentNode)\n  }\n  render () {\n    return (\n      <div>\n        {/* 回调函数最基础的定义就是你定义了一个函数，但是你没有调用，被别人使用 */}\n        <input\n          ref={currentNode => {\n            console.log(currentNode) //回调函数是谁调用就是谁\n            this.inputInfo = currentNode\n          }}\n          type='text'\n          placeholder='点击按钮打印输入的信息'\n        ></input>\n        <button onClick={this.showData}>点击显示</button>\n\n        <input\n          onBlur={this.showData2}\n          ref={currentNode => {\n            //内联函数更新过程中会执行两次，一次清空，一次设置新的\n            this.outputInfo = currentNode //拿到当前的节点\n          }}\n          type='text'\n          placeholder='失去焦点打印输入信息'\n        ></input>\n\n        {/* 内联函数的改进 */}\n        <input\n          ref={this.showData3}\n          type='text'\n          placeholder='点击展示输入信息，区别于内联函数会执行两次'\n        ></input>\n      </div>\n    )\n  }\n}\nexport default RefsPage\n"]},"metadata":{},"sourceType":"module"}