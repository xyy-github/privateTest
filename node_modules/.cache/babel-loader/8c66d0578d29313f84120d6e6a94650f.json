{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - \\u6570\\u636E/privateTest/private/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, NavLink, Route, Link } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport Register from './pages/register';\nimport Login from './pages/login';\nimport Message from './pages/message';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport './assets/less/message.less';\nimport Nav from './component/nav';\nimport login from './pages/login'; // function clickfun(){\n// // 其中this为undefined,可以定义全局that为类的构造器this\n//   console.log(that.state.ishot)\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /* Link组件，只改变url */\n} // 简单组件\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [\" \", \" \", /*#__PURE__*/_jsxDEV(Router, {\n        children: [\" \", \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\" \", \" \", \" \", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: \"/login\",\n              search: \"?username=name\",\n              hash: \"#the-hash\",\n              state: {\n                fromDashboard: true,\n                flag: '测试测试'\n              } // 隐藏属性 可以传递隐蔽的东西\n\n            },\n            children: \"\\u6211\\u7684 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 26\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/register\",\n              activeClassName: \"selected\",\n              activeStyle: {\n                color: 'red'\n              },\n              children: \" \\u767B\\u9646 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, this), \" \", \" \", \" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          render: () => {\n            // return 你要显示的视图\n            return /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" \\u7476\\u7476\\u52A0\\u6CB9 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 16\n            }, this); //  return <IndexPage shop={shop} setShop={setShop}/>\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          component: Login,\n          children: \" \\u3002\\u3002 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 5\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          exact: true,\n          component: Register,\n          children: \" \\uFF1F\\uFF1F \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 22\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n} // 复杂组件 复杂的调用方式，简化版查看login\n\n\n_c = App;\nlet that;\n\nclass ClassCom extends React.Component {\n  //构造器调用一次\n  constructor(props) {\n    super(props); //在这个类的实例上做自己的\n\n    this.state = {\n      ishot: true,\n      name: \"yaoyao\"\n    }; // that=this;\n\n    this.changeHot = this.changeHot.bind(this); //将更改this，并给自身增加一个changeHot方法\n    // this.demo=this.changeHot.bind(this);//将更改this，\n  } //点几次调用几次\n\n\n  changeHot() {\n    //这里指的this为undefined，因为类中的方法默认开启严格模式\n    // changeHot是作为onclick的回调，所以不是通过实例调用的，是直接调用\n    // changeHot放在ClassCom的原型对象上，供实例调用\n    console.log(this.state.ishot); // this.state.ishot=!this.state.ishot;！！！状态state不可直接更改，需要使用setState\n\n    const ishot = this.state.ishot; //更新为合并不是替换\n\n    this.setState({\n      ishot: !ishot\n    });\n  } // render调用1+n次，1是初始化，N是状态更新的次数\n\n\n  render() {\n    console.log(this);\n    const {\n      ishot,\n      name\n    } = this.state;\n    const msg = {\n      title: 'topic',\n      content: 'this is a piece of information'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \\u76F4\\u63A5\\u7528this.state\\u4E2D\\u7684\\u503C\\uFF1A \", this.state.name, \": \", this.state.ishot ? \"hh\" : \"xx\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \\u5148\\u5B9A\\u4E49\\u518D\\u7528this.state\\u7684\\u503C\\uFF1A \", name, \": \", ishot ? \"hh\" : \"xx\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 16\n      }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        onClick: this.changeHot,\n        children: \" \\u5B9E\\u4F8B\\u7684\\u65B9\\u6CD5 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 81\n      }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }, this), \" \", \" \", \" \", /*#__PURE__*/_jsxDEV(Message, { ...msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 31\n      }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(Message, {\n        title: \"\\u6807\\u9898\",\n        content: \"\\u5185\\u5BB9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nexport default ClassCom; // export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/privateTest/private/src/App.js"],"names":["React","BrowserRouter","Router","Switch","NavLink","Route","Link","Redirect","Register","Login","Message","Button","Nav","login","App","pathname","search","hash","state","fromDashboard","flag","color","that","ClassCom","Component","constructor","props","ishot","name","changeHot","bind","console","log","setState","render","msg","title","content"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  NavLink,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {\n  Redirect\n} from 'react-router';\nimport Register from './pages/register';\nimport Login from './pages/login'\nimport Message from './pages/message';\nimport {\n  Button\n} from 'antd';\nimport 'antd/dist/antd.css';\nimport './assets/less/message.less'\n\nimport Nav from './component/nav';\nimport login from './pages/login';\n\n// function clickfun(){\n// // 其中this为undefined,可以定义全局that为类的构造器this\n//   console.log(that.state.ishot)\n// }\n\n{\n  /* Link组件，只改变url */ }\n// 简单组件\nfunction App() {\n  return ( <\n    div className = \"App\" >\n    <\n    header className = \"App-header\" > {\n      /* <Button type=\"primary\">Button</Button> */ } <\n    Router > {\n      /* 静态li路由导航 */ } <\n    ul > {\n      /* （1）Link 静态导航标签 没有样式*/ } {\n      /* <li><Link to='/login'>我的</Link></li> */ } {\n      /* link隐形传递参数 */ } <\n    Link to = {\n      {\n        pathname: \"/login\",\n        search: \"?username=name\",\n        hash: \"#the-hash\",\n        state: {\n          fromDashboard: true,\n          flag: '测试测试'\n        } // 隐藏属性 可以传递隐蔽的东西\n      }\n    } >\n    我的 < /Link>\n\n    {\n      /* （2）NavLink 选中添加样式 */ } <\n    li > < NavLink to = '/register'\n    activeClassName = \"selected\"\n    activeStyle = {\n      {\n        color: 'red'\n      }\n    } > 登陆 < /NavLink></li >\n    <\n    /ul> {\n      /* url 中拼写地址 */ } {\n      /* render传值 */ } <\n    Route path = \"/login\"\n    exact render = {\n      () => {\n        // return 你要显示的视图\n        return <h1 > 瑶瑶加油 < /h1>\n        //  return <IndexPage shop={shop} setShop={setShop}/>\n\n      }\n    }\n    />\n\n    <\n    Route path = '/login'\n    exact component = {\n      Login\n    } > 。。 < /Route> <\n    Route path = '/register'\n    exact component = {\n      Register\n    } > ？？ < /Route> {\n      /* 重定向： <Redirect from=\"messages/:id\" to=\"/messages/:id\" /> */ }\n\n    <\n    /Router>\n\n    <\n    /header> <\n    /div>\n  );\n}\n\n// 复杂组件 复杂的调用方式，简化版查看login\nlet that;\nclass ClassCom extends React.Component {\n  //构造器调用一次\n  constructor(props) {\n    super(props);\n    //在这个类的实例上做自己的\n    this.state = {\n      ishot: true,\n      name: \"yaoyao\"\n    }\n    // that=this;\n    this.changeHot = this.changeHot.bind(this); //将更改this，并给自身增加一个changeHot方法\n    // this.demo=this.changeHot.bind(this);//将更改this，\n  }\n  //点几次调用几次\n  changeHot() {\n    //这里指的this为undefined，因为类中的方法默认开启严格模式\n    // changeHot是作为onclick的回调，所以不是通过实例调用的，是直接调用\n    // changeHot放在ClassCom的原型对象上，供实例调用\n    console.log(this.state.ishot);\n\n    // this.state.ishot=!this.state.ishot;！！！状态state不可直接更改，需要使用setState\n    const ishot = this.state.ishot; //更新为合并不是替换\n    this.setState({\n      ishot: !ishot\n    })\n  }\n \n  // render调用1+n次，1是初始化，N是状态更新的次数\n  render() {\n    console.log(this);\n    const {\n      ishot,\n      name\n    } = this.state;\n    const msg = {\n      title: 'topic',\n      content: 'this is a piece of information'\n    };\n\n    return ( <\n      div >\n      <\n      h2 > 直接用this.state中的值： {\n        this.state.name\n      }: {\n        this.state.ishot ? \"hh\" : \"xx\"\n      } < /h2> <\n      h2 > 先定义再用this.state的值： {\n        name\n      }: {\n        ishot ? \"hh\" : \"xx\"\n      } < /h2> {\n        /* <h1 onClick={clickfun} className=\"h1Sty\"> 实例的方法，定义全局that调用</h1> */ } <\n      h1 onClick = {\n        this.changeHot\n      } > 实例的方法 < /h1> {\n        /* <h1 onClick={this.demo()}>实例的方法</h1> */ }\n\n      {\n        /* 直接引用某组件 */ } <\n      Login / > {\n        /* 引用自组件，并通过父组件props传参 */ } {\n        /* (1)...复制对象 可批量*/ } <\n      Message {\n        ...msg\n      }\n      /> {\n        /* （2）传递单个对象 */ } <\n      Message title = \"标题\"\n      content = \"内容\" / >\n\n      <\n      /div>\n    )\n  }\n}\nexport default ClassCom;\n// export default App;"]},"metadata":{},"sourceType":"module"}