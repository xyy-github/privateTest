{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - \\u6570\\u636E/privateTest/private/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, NavLink, Route, Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport Register from './pages/register';\nimport Login from './pages/login';\nimport Message from './pages/message';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport './assets/less/message.less';\nimport Nav from './component/nav';\nimport login from './pages/login'; // function clickfun(){\n// // 其中this为undefined,可以定义全局that为类的构造器this\n//   console.log(that.state.ishot)\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /* Link组件，只改变url */\n} // 简单组件\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [' ', ' ', /*#__PURE__*/_jsxDEV(Router, {\n        children: [' ', ' ', /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [' ', ' ', ' ', ' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: '/login',\n              search: '?username=name',\n              hash: '#the-hash',\n              state: {\n                fromDashboard: true,\n                flag: '测试测试'\n              } // 隐藏属性 可以传递隐蔽的东西\n\n            },\n            children: [\"\\u6211\\u7684\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [' ', /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/register\",\n              activeClassName: \"selected\",\n              activeStyle: {\n                color: 'red'\n              },\n              children: [' ', \"\\u767B\\u9646\", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), ' ', \" \", ' ', /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          render: () => {\n            // return 你要显示的视图\n            return /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" \\u7476\\u7476\\u52A0\\u6CB9 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 22\n            }, this); //  return <IndexPage shop={shop} setShop={setShop}/>\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          component: Login,\n          children: [' ', \"\\u3002\\u3002\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          exact: true,\n          component: Register,\n          children: [' ', \"\\uFF1F\\uFF1F\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), ' ']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n} // 复杂组件 复杂的调用方式，简化版查看login\n\n\n_c = App;\nlet that;\n\nclass ClassCom extends React.Component {\n  //构造器调用一次\n  constructor(props) {\n    //构造器是否接受props，是否传递props，取决于是否希望在构造器中通过this访问props\n    super(props);\n    this.state = {\n      ishot: true,\n      name: 'yaoyao'\n    }; //（通过this.state初始化实力对象）\n    // that=this;\n\n    this.changeHot = this.changeHot.bind(this); //将更改this，并给自身增加一个changeHot方法(为事件处理函数绑定实例)\n    // this.demo=this.changeHot.bind(this);//将更改this，\n  } //点几次调用几次\n\n\n  changeHot() {\n    //这里指的this为undefined，因为类中的方法默认开启严格模式\n    // changeHot是作为onclick的回调，所以不是通过实例调用的，是直接调用\n    // changeHot放在ClassCom的原型对象上，供实例调用\n    console.log(this.state.ishot); // this.state.ishot=!this.state.ishot;！！！状态state不可直接更改，需要使用setState\n\n    const ishot = this.state.ishot; //更新为合并不是替换\n\n    this.setState({\n      ishot: !ishot\n    });\n  } // render调用1+n次，1是初始化，N是状态更新的次数\n\n\n  render() {\n    console.log(this);\n    const {\n      ishot,\n      name\n    } = this.state;\n    const msg = {\n      title: 'topic',\n      content: 'this is a piece of information',\n      time: 2019\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u76F4\\u63A5\\u7528this.state\\u4E2D\\u7684\\u503C\\uFF1A \", this.state.name, this.state.ishot ? 'hh' : 'xx']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u5148\\u5B9A\\u4E49\\u518D\\u7528this.state\\u7684\\u503C\\uFF1A \", name, \": \", ishot ? 'hh' : 'xx']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"h1\", {\n        onClick: this.changeHot,\n        children: \" \\u5B9E\\u4F8B\\u7684\\u65B9\\u6CD5 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }, this), ' ', \" \", ' ', /*#__PURE__*/_jsxDEV(Message, { ...msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Message, {\n        content: \"\\u5185\\u5BB9\",\n        time: \"2017\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        content: \"\\u5185\\u5BB9\\uFF0C\\u4E0D\\u4F20\\u65F6\\u95F4\\u8BBE\\u7F6E\\u9ED8\\u8BA4\\u503C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        title: \"\\u4E59\",\n        content: \"\\u5185\\u5BB9\",\n        time: 2019\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ClassCom; // export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/privateTest/private/src/App.js"],"names":["React","BrowserRouter","Router","Switch","NavLink","Route","Link","Redirect","Register","Login","Message","Button","Nav","login","App","pathname","search","hash","state","fromDashboard","flag","color","that","ClassCom","Component","constructor","props","ishot","name","changeHot","bind","console","log","setState","render","msg","title","content","time"],"mappings":"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","sourcesContent":["import './App.css'\nimport React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  NavLink,\n  Route,\n  Link\n} from 'react-router-dom'\nimport { Redirect } from 'react-router'\nimport Register from './pages/register'\nimport Login from './pages/login'\nimport Message from './pages/message'\nimport { Button } from 'antd'\nimport 'antd/dist/antd.css'\nimport './assets/less/message.less'\n\nimport Nav from './component/nav'\nimport login from './pages/login'\n\n// function clickfun(){\n// // 其中this为undefined,可以定义全局that为类的构造器this\n//   console.log(that.state.ishot)\n// }\n\n{\n  /* Link组件，只改变url */\n}\n// 简单组件\nfunction App () {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        {' '}\n        {/* <Button type=\"primary\">Button</Button> */}{' '}\n        <Router>\n          {' '}\n          {/* 静态li路由导航 */}{' '}\n          <ul>\n            {' '}\n            {/* （1）Link 静态导航标签 没有样式*/}{' '}\n            {/* <li><Link to='/login'>我的</Link></li> */}{' '}\n            {/* link隐形传递参数 */}{' '}\n            <Link\n              to={{\n                pathname: '/login',\n                search: '?username=name',\n                hash: '#the-hash',\n                state: {\n                  fromDashboard: true,\n                  flag: '测试测试'\n                } // 隐藏属性 可以传递隐蔽的东西\n              }}\n            >\n              我的{' '}\n            </Link>\n            {/* （2）NavLink 选中添加样式 */}{' '}\n            <li>\n              {' '}\n              <NavLink\n                to='/register'\n                activeClassName='selected'\n                activeStyle={{\n                  color: 'red'\n                }}\n              >\n                {' '}\n                登陆{' '}\n              </NavLink>\n            </li>\n          </ul>{' '}\n          {/* url 中拼写地址 */} {/* render传值 */}{' '}\n          <Route\n            path='/login'\n            exact\n            render={() => {\n              // return 你要显示的视图\n              return <h1> 瑶瑶加油 </h1>\n              //  return <IndexPage shop={shop} setShop={setShop}/>\n            }}\n          />\n          <Route path='/login' exact component={Login}>\n            {' '}\n            。。{' '}\n          </Route>{' '}\n          <Route path='/register' exact component={Register}>\n            {' '}\n            ？？{' '}\n          </Route>{' '}\n          {/* 重定向： <Redirect from=\"messages/:id\" to=\"/messages/:id\" /> */}\n        </Router>\n      </header>{' '}\n    </div>\n  )\n}\n\n// 复杂组件 复杂的调用方式，简化版查看login\nlet that\n\nclass ClassCom extends React.Component {\n  //构造器调用一次\n  constructor (props) {\n    //构造器是否接受props，是否传递props，取决于是否希望在构造器中通过this访问props\n    super(props)\n\n    this.state = {\n      ishot: true,\n      name: 'yaoyao'\n    } //（通过this.state初始化实力对象）\n    // that=this;\n    this.changeHot = this.changeHot.bind(this) //将更改this，并给自身增加一个changeHot方法(为事件处理函数绑定实例)\n    // this.demo=this.changeHot.bind(this);//将更改this，\n  }\n\n  //点几次调用几次\n  changeHot () {\n    //这里指的this为undefined，因为类中的方法默认开启严格模式\n    // changeHot是作为onclick的回调，所以不是通过实例调用的，是直接调用\n    // changeHot放在ClassCom的原型对象上，供实例调用\n    console.log(this.state.ishot)\n\n    // this.state.ishot=!this.state.ishot;！！！状态state不可直接更改，需要使用setState\n    const ishot = this.state.ishot //更新为合并不是替换\n    this.setState({\n      ishot: !ishot\n    })\n  }\n\n  // render调用1+n次，1是初始化，N是状态更新的次数\n  render () {\n    console.log(this)\n    const { ishot, name } = this.state\n    const msg = {\n      title: 'topic',\n      content: 'this is a piece of information',\n      time: 2019\n    }\n\n    return (\n      <div>\n        <h2>\n          直接用this.state中的值： {this.state.name}\n          {this.state.ishot ? 'hh' : 'xx'}\n        </h2>\n        <h2>\n          \n          先定义再用this.state的值： {name}: {ishot ? 'hh' : 'xx'}\n        </h2>\n        {/* <h1 onClick={clickfun} className=\"h1Sty\"> 实例的方法，定义全局that调用</h1> */}{' '}\n        <h1 onClick={this.changeHot}> 实例的方法 </h1>\n        {/* <h1 onClick={this.demo()}>实例的方法</h1> */}\n        {/* 直接引用某组件 */} <Login />{' '}\n        {/* 引用自组件，并通过父组件props传参 */} {/* (1)...复制对象 可批量*/}{' '}\n        <Message {...msg} />\n        {/* （2）传递单个对象 */} <Message content='内容' time='2017' />\n        <Message content='内容，不传时间设置默认值' />\n        <Message title='乙' content='内容' time={2019} />\n        {/* ref */} <Register />\n      </div>\n    )\n  }\n}\nexport default ClassCom\n// export default App;\n"]},"metadata":{},"sourceType":"module"}